I'll be writing a bunch of card game variants and hope to eventually factor out an engine that's useful for quickly implenting new card games
Current Status

Front end
    switch to using gui thread rather than text-based
        -- * gui spawns text based thread and acts as a pipe
        -- * move render text to being printed on gui, but still
        --     read moves from std input
        -- * draw cards
        -- * mouse interaction with cards
        * let cards request interaction with target
        * remove dependence on cli
        * use lenses to clear up nested record updates
        * disentagle depth/height from id
        * display images in depth order
    Medium/Long term wants for GUI
        sensible text boxes
        menus
        buttons
        draggable/clickable objects
        regions
        sensible object overlaps (works with clicking)
        draw images
    Philosophy
        Gui cannot draw anything the server doesn't tell it about (it may choose not to draw redundant info)
Klondike
    redo with gui (and maybe client server nonsense)
Hearts
    bug: trick winning may be broken
    maybe:
    -- move to mvc
    -- rpc/servery thing,
    -- stop computing scores along the way and store tricks, then compute at round end
    -- ai can be better for testing (if can dodge trick, throw points. If can't win big)
    -- revamp info with lenses
    -- quickCheck isValidPlay
    -- make some sort of monady thing that ensures player input is always validated
